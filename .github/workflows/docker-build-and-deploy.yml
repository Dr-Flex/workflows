name: Docker build and push

on:
  workflow_call:
    inputs:
      deployment-file:
        required: true
        type: string
      integration-test-folder:
        description: "docker compose folder for integration tests"
        required: false
        type: string
        

jobs:
  docker-build-and-deploy:
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v4

      - name: Create image ref
        run: |
          export IMAGE_TAG="$(date +'%Y-%m-%d_%H-%M-%S')_${{ github.ref_name }}_${{ github.sha }}"
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          export IMAGE_LATEST_TAG="${{ github.ref_name }}-latest"
          echo "IMAGE_LATEST_TAG=$IMAGE_LATEST_TAG" >> $GITHUB_ENV

      - name: Build the Docker image
        run: docker build --build-arg="IMAGE_TAG=$IMAGE_TAG" . -t ${{ secrets.DOCKER_REGISTRY_URL }}/dr-flex/${{ github.event.repository.name }}:$IMAGE_TAG
        
      - name: Run integration tests
        if: "${{ inputs.integration-test-folder != '' }}"
        run: cd "${{ inputs.integration-test-folder}}" && docker compose up --force-recreate -V --build --exit-code-from test-runner
        
      - name: Login to Dr-Flex container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.DOCKER_REGISTRY_URL }}
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}

      - name: Tag with latest-Tag
        run: docker tag ${{ secrets.DOCKER_REGISTRY_URL }}/dr-flex/${{ github.event.repository.name }}:$IMAGE_TAG ${{ secrets.DOCKER_REGISTRY_URL }}/dr-flex/${{ github.event.repository.name }}:$IMAGE_LATEST_TAG

      - name: Push the Docker image
        run: docker push ${{ secrets.DOCKER_REGISTRY_URL }}/dr-flex/${{ github.event.repository.name }}:$IMAGE_TAG

      - name: Push the Docker image with latest tag
        run: docker push ${{ secrets.DOCKER_REGISTRY_URL }}/dr-flex/${{ github.event.repository.name }}:$IMAGE_LATEST_TAG

      - name: Restart deployment
        run: >
            wget --no-verbose --content-on-error=on --output-document -
            --header "Authorization: ${{ secrets.AUTODEPLOY_TOKEN }}"
            --post-data "deploymentFile=${{ inputs.deployment-file }}&newImageRef=${{ secrets.DOCKER_REGISTRY_URL }}/dr-flex/${{ github.event.repository.name }}:$IMAGE_TAG"
            ${{ secrets.AUTODEPLOY_URL  }}
